# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml
trigger:
- master
- pipeline

stages:
- stage: Test
  jobs:
  - template: pipeline/jobs/test_role.yml
    parameters:
      name: core

  - template: pipeline/jobs/test_role.yml
    parameters:
      name: docker

  - template: pipeline/jobs/test_role.yml
    parameters:
      name: language

  - template: pipeline/jobs/test_role.yml
    parameters:
      name: workstation

- stage: DeployProd
  displayName: Deploy to Production
  dependsOn: Test
  jobs:
  - job: Deploy
    displayName: Deploy to Production
    pool:
      vmImage: "ubuntu-16.04"
    steps:
    - task: UsePythonVersion@0
      inputs:
        versionSpec: "3.6"
        addToPath: true
        architecture: "x64"

    - task: DownloadSecureFile@1
      name: knownHosts
      displayName: "SETUP: Download known_hosts file"
      inputs:
        secureFile: "known_hosts"

    - task: DownloadSecureFile@1
      name: inventory
      displayName: "SETUP: Download inventory file"
      inputs:
        secureFile: "inventory.ini"

    - task: DownloadSecureFile@1
      name: privKey
      displayName: "SETUP: Download SSH private key"
      inputs:
        secureFile: "id_rsa_azure"
    
    - script: chmod 0600 $(privKey.secureFilePath)
      displayName: Set correct permissions on SSH private key

    - script: |
        python -m pip install --upgrade pipenv
        pipenv sync
      displayName: "SETUP: Install dependencies"
      condition: succeeded()

    - script: |
        ansible-playbook \
             --inventory $(inventory.secureFilePath) \
             --user jlrickert \
             --private-key $(privKey.secureFilePath) \
             server.yml
      env:
        ANSIBLE_SSH_ARGS: -o UserKnownHostsFile=$(knownHosts.secureFilePath)
        ANSIBLE_HOST_KEY_CHECKING: False
      condition: succeeded()
      displayName: "DEPLOY: Deploying to all targets"
