---
- name: Install packages (Debian)
  when: ansible_os_family == "Debian"
  apt:
    name: [
      "aptitude",
      "apt-file",
      "fasd",
      "git",
      "htop",
      "lsof",
      "neovim",
      "python-neovim",
      "python3-neovim",
      "silversearcher-ag",
      "ssh",
      "tree",
      "zsh"
    ]
    state: present
  register: ubuntu_packages

- name: Install additional packages (Debian)
  when: ansible_os_family == "Debian"
  apt:
    name: "{{ debian_additional_packages }}"
    state: present

- name: Get zsh shell location
  command: which zsh
  changed_when: no
  failed_when: zsh_path_res.rc != 0
  register: zsh_path_res

- name: "Create user {{ username }}"
  user:
    name: "{{ username }}"
    state: present
    comment: "Admin user"
    groups:
      - "sudo"
    shell: "{{ zsh_path_res.stdout }}"
    create_home: yes
    append: yes

- name: Copy sudoers config
  become: yes
  template:
    src: sudoers.j2
    dest: /etc/sudoers
    mode: "0440"
    validate: "visudo -cf %s"

- name: Make SSH directory for user
  file:
    path: "/home/{{ username }}/.ssh"
    state: directory
    mode: "0700"
    owner: "{{ username }}"
    group: "{{ username }}"

- name: Set authorization keys for {{ username }}
  authorized_key:
    user: "{{ username }}"
    state: present
    key: "{{ item }}"
  loop: "{{ ssh_keys }}"

- name: Docker hack so sshd config may be tested
  become: yes
  when: ansible_hostname == "instance"
  file:
    path: "/run/sshd"
    state: directory

- name: Copy sshd configuration
  become: yes
  template:
    src: sshd_config.j2
    dest: /etc/ssh/sshd_config
    owner: root
    group: root
    mode: "0644"
    validate: /usr/sbin/sshd -t -f %s
  notify: restart sshd

- name: Enable and start SSH Daemon
  when: ansible_hostname != "instance"
  service:
    name: sshd.service
    enabled: yes
    state: started
